<imageModule category="Image" creation="2015-06-04 10:29:19.226 UTC" deleted="false" description="Galaxy application" isBase="false" isLatestVersion="true" lastModified="2015-11-20 12:11:45.132 UTC" loginUser="ubuntu" logoLink="https://slipstream.sixsq.com/images/modules-logos/galaxy.png" moduleReferenceUri="module/examples/images/ubuntu-12.04" parentUri="module/apps/Galaxy" platform="ubuntu" shortName="galaxy" version="2137">
   <authz groupCreateChildren="false" groupDelete="false" groupGet="true" groupPost="true" groupPut="true" inheritedGroupMembers="true" owner="sixsq" ownerCreateChildren="true" ownerDelete="true" ownerGet="true" ownerPost="true" ownerPut="true" publicCreateChildren="false" publicDelete="false" publicGet="true" publicPost="true" publicPut="false">
      <groupMembers>
         </groupMembers>
   </authz>
   <commit author="sixsq">
      <comment>Initial version of this module</comment>
   </commit>
   <published publicationDate="2015-11-20 12:11:45.132 UTC" />
   <cloudNames length="15">
      </cloudNames>
   <runs count="0" limit="20" offset="0" totalCount="0" />
   <targets>
      <target name="execute">#!/bin/bash

#
# ==========
#  Following section could be included as image recipe for cloud
#  that support image building.
# ==========
#

#
# Install prerequisites
apt-get clean
apt-get update
apt-get -y install emacs23-nox mercurial g++ autoconf make zlib1g-dev r-base r-base-dev

# 
# set python version (needed?)
#
mkdir -p /root/galaxy-python
ln -s /usr/bin/python /root/galaxy-python/python
export PATH=/root/galaxy-python:$PATH 

#
# download the galaxy code and set to stable release
#
cd /root
hg clone https://bitbucket.org/galaxy/galaxy-dist/
cd /root/galaxy-dist/
hg update stable

#
# publish username and password so user can log in
# TODO: currently unused
#
ss-set galaxy_user guser
guser_password=`ss-random --size 8 galaxy_pswd`

#
# initialize the configuration of galaxy
#
# TODO: use created user and turn off anonymous access
# as well as user self-registration
#
cp config/galaxy.ini.sample config/galaxy.ini
sed -i '/#host =/a host = 0.0.0.0' config/galaxy.ini
sed -i '/#port =/a port = 80' config/galaxy.ini
sed -i '/#allow_user_creation/a allow_user_creation = True' config/galaxy.ini
sed -i '/#require_login/a require_login = False' config/galaxy.ini
sed -i '/#tool_dependency_dir/a tool_dependency_dir = /root/tool-dependencies/' config/galaxy.ini
sed -i '/#admin_users/a admin_users = admin@galaxy.example.org' config/galaxy.ini

#
# run the service as a daemon in the background
#
./run.sh --daemon

# TODO: 
# galaxy takes a significant amount of time to start
# a loop to check if the interface is ready should be 
# added here before letting the user access the deployment

#
# set the deployment url
#
hname=`ss-get hostname`
ss-set ss:url.service "http://${hname}/"

#
# set the customstate to inform user that everything's ready
#
ss-set statecustom 'Galaxy Ready!'
</target>
      <target name="report" />
      <target name="onvmadd" />
      <target name="onvmremove" />
   </targets>
   <packages />
   <prerecipe />
   <recipe />
   <cloudImageIdentifiers />
   <parameters>
      <entry>
         <string>galaxy_pswd</string>
         <parameter category="Output" description="password of galaxy user" isSet="false" mandatory="false" name="galaxy_pswd" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>network</string>
         <parameter category="Cloud" description="Network type" isSet="true" mandatory="true" name="network" order="0" order_="0" readonly="false" type="Enum">
            <enumValues length="2">
               <string>Public</string>
               <string>Private</string>
            </enumValues>
            <value>Public</value>
            <defaultValue>Public</defaultValue>
         </parameter>
      </entry>
      <entry>
         <string>hostname</string>
         <parameter category="Output" description="hostname/ip of the image" isSet="false" mandatory="true" name="hostname" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>extra.disk.volatile</string>
         <parameter category="Cloud" description="Volatile extra disk in GB" isSet="false" mandatory="true" name="extra.disk.volatile" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>instanceid</string>
         <parameter category="Output" description="Cloud instance id" isSet="false" mandatory="true" name="instanceid" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>galaxy_user</string>
         <parameter category="Output" description="username of galaxy user" isSet="false" mandatory="false" name="galaxy_user" order="0" order_="0" readonly="false" type="String" />
      </entry>
      </parameters>
   <notes length="0" />
</imageModule>