<imageModule category="Image" creation="2014-02-11 11:16:43.979 UTC" deleted="false" description="A Minecraft server" isBase="false" isLatestVersion="true" lastModified="2015-11-20 12:08:25.202 UTC" loginUser="root" logoLink="https://slipstream.sixsq.com/images/modules-logos/minecraft.svg" moduleReferenceUri="module/examples/images/centos-6" parentUri="module/apps/Minecraft" platform="centos" shortName="minecraft-server" version="2133">
   <authz groupCreateChildren="false" groupDelete="false" groupGet="true" groupPost="true" groupPut="true" inheritedGroupMembers="true" owner="sixsq" ownerCreateChildren="true" ownerDelete="true" ownerGet="true" ownerPost="true" ownerPut="true" publicCreateChildren="false" publicDelete="false" publicGet="true" publicPost="true" publicPut="false">
      <groupMembers>
         </groupMembers>
   </authz>
   <commit author="sixsq">
      <comment>Initial version of this module</comment>
   </commit>
   <published publicationDate="2015-11-20 12:08:25.202 UTC" />
   <cloudNames length="15">
      </cloudNames>
   <runs count="0" limit="20" offset="0" totalCount="0" />
   <targets>
      <target name="execute">#!/usr/bin/env bash

# Fail fast and fail hard.
set -eox pipefail

# Settings
MINECRAFT_GAMEMODE=$(ss-get gamemode)
MINECRAFT_VERSION=$(ss-get version)
MINECRAFT_OPERATOR=$(ss-get --noblock operator)

ss-display "Configuring Minecraft server"
cat &gt; /etc/puppet/manifests/app.pp &lt;&lt; EOF
class { 'minecraft': }

# See: https://github.com/branan/puppet-module-minecraft/issues/4
file { '/opt/minecraft/server.properties':
    ensure  =&gt; file,
    owner   =&gt; 'mcserver',
    group   =&gt; 'mcserver',
    mode    =&gt; '0664',
    require =&gt; User['mcserver'],
}

minecraft::server_prop { 'gamemode':
  value =&gt; '$MINECRAFT_GAMEMODE'
}

minecraft::op { '$MINECRAFT_OPERATOR': }

EOF
puppet apply -v /etc/puppet/manifests/app.pp

# Accepting EULA
echo 'eula=true' &gt; /opt/minecraft/eula.txt

ss-display "Updating Minecraft server to the version $MINECRAFT_VERSION"
service minecraft stop
rm -Rf /opt/minecraft/world
wget -O /opt/minecraft/minecraft_server.jar https://s3.amazonaws.com/Minecraft.Download/versions/$MINECRAFT_VERSION/minecraft_server.$MINECRAFT_VERSION.jar
chown mcserver: /opt/minecraft/minecraft_server.jar
service minecraft start

ss-display "Minecraft server is ready to go!"


</target>
      <target name="onvmadd" />
      <target name="report" />
      <target name="onvmremove" />
   </targets>
   <packages>
      <package name="puppet" />
      <package name="wget" />
   </packages>
   <prerecipe>#!/usr/bin/env bash

function ss-display {
    $(which ss-display) "$1" || echo "$1"
}

# Fail fast and fail hard.
set -eox pipefail

ss-display "Installing Puppet client"
rpm -ivh https://yum.puppetlabs.com/el/6/products/x86_64/puppetlabs-release-6-10.noarch.rpm

sync
sleep 1

</prerecipe>
   <recipe>#!/usr/bin/env bash

function ss-display {
    $(which ss-display) "$1" || echo "$1"
}

# Fail fast and fail hard.
set -eox pipefail

mkdir -p /etc/puppet/{modules,manifests}

ss-display "Installing Minecraft server"

puppet module install branan/minecraft --version 1.0.0

ss-display 'Configuring firewall'
iptables -I INPUT 5 -p tcp --dport 25565 -j ACCEPT -m comment --comment 'Minecraft Server'

sync
sleep 1

</recipe>
   <cloudImageIdentifiers />
   <parameters>
      <entry>
         <string>gamemode</string>
         <parameter category="Input" description="Defines the mode of gameplay (0:survival, 1:creative, 2:adventure)" isSet="true" mandatory="false" name="gamemode" order="0" order_="0" readonly="false" type="String">
            <value>1</value>
            <defaultValue>1</defaultValue>
         </parameter>
      </entry>
      <entry>
         <string>operator</string>
         <parameter category="Input" description="Username of a minecraft account to set as operator (admin)" isSet="false" mandatory="false" name="operator" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>network</string>
         <parameter category="Cloud" description="Network type" isSet="true" mandatory="true" name="network" order="0" order_="0" readonly="false" type="Enum">
            <enumValues length="2">
               <string>Public</string>
               <string>Private</string>
            </enumValues>
            <value>Public</value>
            <defaultValue>Public</defaultValue>
         </parameter>
      </entry>
      <entry>
         <string>hostname</string>
         <parameter category="Output" description="hostname/ip of the image" isSet="false" mandatory="true" name="hostname" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>version</string>
         <parameter category="Input" description="Version of Minecraft Server to install" isSet="true" mandatory="false" name="version" order="0" order_="0" readonly="false" type="String">
            <value>1.8.7</value>
            <defaultValue>1.8.7</defaultValue>
         </parameter>
      </entry>
      <entry>
         <string>extra.disk.volatile</string>
         <parameter category="Cloud" description="Volatile extra disk in GB" isSet="false" mandatory="true" name="extra.disk.volatile" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>instanceid</string>
         <parameter category="Output" description="Cloud instance id" isSet="false" mandatory="true" name="instanceid" order="0" order_="0" readonly="false" type="String" />
      </entry>
      </parameters>
   <notes length="0" />
</imageModule>