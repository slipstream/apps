<imageModule category="Image" creation="2013-11-16 10:03:32.474 UTC" deleted="false" description="Torque master node" isBase="false" isLatestVersion="true" lastModified="2015-07-02 14:39:26.455 UTC" loginUser="root" logoLink="https://slipstream.sixsq.com/images/modules-logos/torque.png" moduleReferenceUri="module/examples/images/ubuntu-14.04" parentUri="module/apps/Torque" platform="ubuntu" shortName="torque-master" version="1798">
   <authz groupCreateChildren="false" groupDelete="false" groupGet="true" groupPost="false" groupPut="true" inheritedGroupMembers="true" owner="sixsq" ownerCreateChildren="true" ownerDelete="true" ownerGet="true" ownerPost="true" ownerPut="true" publicCreateChildren="false" publicDelete="false" publicGet="true" publicPost="false" publicPut="false">
      <groupMembers>
         </groupMembers>
   </authz>
   <commit author="sixsq">
      <comment>Initial version of this module</comment>
   </commit>
   <cloudNames length="12">
      </cloudNames>
   <runs count="0" limit="20" offset="0" totalCount="0" />
   <targets>
      <target name="onvmadd" />
      <target name="onvmremove" />
      <target name="report" />
      <target name="execute">#!/bin/bash -xe

function get-hostname {
    python -c "import socket; print socket.getfqdn('$1')"
}

MASTER_IP=$(ss-get hostname)
MASTER_HOSTNAME=$(get-hostname $MASTER_IP)
WORKER_NODENAME=$(ss-get torque-worker_nodename)
NUMBER_OF_WORKERS=$(ss-get $WORKER_NODENAME:multiplicity)

ss-set master_hostname "$(hostname)"

ss-display 'Creating normal user'
adduser --quiet --disabled-password --gecos '' tuser

ss-display 'Configuring the master'
# initialize the server configuration with hostname (must be a name!)
echo "$MASTER_IP $(hostname)" &gt;&gt; /etc/hosts
touch /var/spool/torque/server_priv/nodes
echo $MASTER_HOSTNAME &gt;  /etc/torque/server_name 

ss-display 'Generating munge key'
create-munge-key

ss-display 'Starting munge'
echo 'OPTIONS="--syslog"' &gt;&gt; /etc/default/munge
service munge start 

# set parameter with munge key to be shared with workers
# value is the base64 encoded value of the binary file
ss-set munge_key_b64 $(cat /etc/munge/munge.key | base64 --wrap 0)

ss-display 'Configuring torque'
# ensure server is stopped, remove existing database
service torque-server stop
rm -f /var/spool/torque/server_priv/nodes
rm -f /var/spool/torque/server_priv/serverdb

# minimal setup of the batch system and queues
cp /usr/share/doc/torque-common/torque.setup .
chmod a+x torque.setup
./torque.setup root $MASTER_HOSTNAME

# ensure again that server is stopped
service torque-server stop

ss-display 'Adding workers'
# pull in node names of all of the workers
rm -f /var/spool/torque/server_priv/nodes
for (( i=1; i &lt;= $NUMBER_OF_WORKERS; i++ )); do
  worker_ip=$(ss-get --timeout 500 $WORKER_NODENAME.$i:hostname)
  worker_hostname=$(get-hostname $worker_ip)
  echo $worker_hostname &gt;&gt; /var/spool/torque/server_priv/nodes
done

ss-display 'Starting torque'

# restart the server so that it will see all workers
service torque-server restart
# now start the torque scheduler (simple FIFO)
service torque-scheduler restart

ss-display 'Configuring SSH'
# configuration for ssh access between nodes as user
su - tuser -c 'mkdir -p /home/tuser/.ssh'
su - tuser -c 'chmod 0700 /home/tuser/.ssh'
su - tuser -c 'ssh-keygen -f /home/tuser/.ssh/id_rsa -N ""'
cp /root/.ssh/authorized_keys /home/tuser/.ssh/authorized_keys
chown tuser:tuser /home/tuser/.ssh/authorized_keys
chmod 0600 /home/tuser/.ssh/authorized_keys
su - tuser -c 'cat /home/tuser/.ssh/id_rsa.pub &gt;&gt; /home/tuser/.ssh/authorized_keys'

ss-set ssh_key_rsa_b64 $(cat /home/tuser/.ssh/id_rsa | base64 --wrap 0)

ss-display 'Ready'

</target>
   </targets>
   <packages>
      <package name="munge" />
      <package name="torque-server" />
      <package name="torque-scheduler" />
   </packages>
   <prerecipe />
   <recipe>#!/bin/bash -x

#
# Clean &amp; update
#
apt-get clean
apt-get update


#
# update system
#
apt-get -o DPkg::options::="--force-confdef" -o DPkg::options::="--force-confold" -y upgrade

#
# ==========
#</recipe>
   <cloudImageIdentifiers />
   <parameters>
      <entry>
         <string>network</string>
         <parameter category="Cloud" description="Network type" isSet="true" mandatory="true" name="network" order="0" order_="0" readonly="false" type="Enum">
            <enumValues length="2">
               <string>Public</string>
               <string>Private</string>
            </enumValues>
            <value>Public</value>
            <defaultValue>Public</defaultValue>
         </parameter>
      </entry>
      <entry>
         <string>hostname</string>
         <parameter category="Output" description="hostname/ip of the image" isSet="false" mandatory="true" name="hostname" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>ssh_key_rsa_b64</string>
         <parameter category="Output" description="SSH Key (RSA) base64 encoded" isSet="false" mandatory="false" name="ssh_key_rsa_b64" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>munge_key_b64</string>
         <parameter category="Output" description="Munge key base64 encoded" isSet="false" mandatory="false" name="munge_key_b64" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>extra.disk.volatile</string>
         <parameter category="Cloud" description="Volatile extra disk in GB" isSet="false" mandatory="true" name="extra.disk.volatile" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>torque-worker_nodename</string>
         <parameter category="Input" description="Name of the node based on the image torque-worker" isSet="false" mandatory="false" name="torque-worker_nodename" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>instanceid</string>
         <parameter category="Output" description="Cloud instance id" isSet="false" mandatory="true" name="instanceid" order="0" order_="0" readonly="false" type="String" />
      </entry>
      <entry>
         <string>master_hostname</string>
         <parameter category="Output" description="Hostname (not IP) of the torque-master" isSet="false" mandatory="false" name="master_hostname" order="0" order_="0" readonly="false" type="String" />
      </entry>
      </parameters>
   <notes length="0" />
</imageModule>